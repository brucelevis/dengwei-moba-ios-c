// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: TeamProto.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Protobuf {

  /// <summary>Holder for reflection information generated from TeamProto.proto</summary>
  public static partial class TeamProtoReflection {

    #region Descriptor
    /// <summary>File descriptor for TeamProto.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TeamProtoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9UZWFtUHJvdG8ucHJvdG8SD0dvb2dsZS5Qcm90b2J1ZiJEChVQQl9HYW1l",
            "ckNyZWF0VGVhbV9DMlMSCwoDZ2lkGAEgASgEEhAKCHRhcmdldGlkGAIgASgN",
            "EgwKBHR5cGUYAyABKA0iNQoVUEJfR2FtZXJDcmVhdFRlYW1fUzJDEgsKA2dp",
            "ZBgBIAEoBBIPCgd0ZWFtX2lkGAIgASgNIjQKFFBCX0dhbWVySm9pblRlYW1f",
            "QzJTEgsKA2dpZBgBIAEoBBIPCgd0ZWFtX2lkGAIgASgNIjEKEVBCX0dhbWVy",
            "TGVhdmVfQzJTEgsKA2dpZBgBIAEoBBIPCgd0ZWFtX2lkGAIgASgNIjwKEVBC",
            "X1RlYW1NZW1iZXJJbmZvEgsKA2dpZBgBIAEoBBIMCgRpY29uGAIgASgNEgwK",
            "BG5hbWUYAyABKAkiTgoOUEJfQ2hhbm5lbENoYXQSCwoDZ2lkGAEgASgEEhIK",
            "CmNoYW5uZWxfaWQYAiABKA0SDQoFc1RleHQYAyABKAkSDAoEdGltZRgEIAEo",
            "BCJWChZQQl9UZWFtQXBwbHlIYW5kbGVfQzJTEgsKA2dpZBgBIAEoBBIMCgR0",
            "ZWFtGAIgASgNEhEKCWFwcGxpY2FudBgDIAMoBBIOCgZoYW5kbGUYBCADKA0q",
            "SgoIVGVhbVR5cGUSEQoNVGVhbVR5cGVfTk9ORRAAEgwKCFRlYW1fT25lEAES",
            "DgoKVGVhbV9UaHJlZRACEg0KCVRlYW1fRml2ZRADYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Protobuf.TeamType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.PB_GamerCreatTeam_C2S), global::Google.Protobuf.PB_GamerCreatTeam_C2S.Parser, new[]{ "Gid", "Targetid", "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.PB_GamerCreatTeam_S2C), global::Google.Protobuf.PB_GamerCreatTeam_S2C.Parser, new[]{ "Gid", "TeamId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.PB_GamerJoinTeam_C2S), global::Google.Protobuf.PB_GamerJoinTeam_C2S.Parser, new[]{ "Gid", "TeamId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.PB_GamerLeave_C2S), global::Google.Protobuf.PB_GamerLeave_C2S.Parser, new[]{ "Gid", "TeamId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.PB_TeamMemberInfo), global::Google.Protobuf.PB_TeamMemberInfo.Parser, new[]{ "Gid", "Icon", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.PB_ChannelChat), global::Google.Protobuf.PB_ChannelChat.Parser, new[]{ "Gid", "ChannelId", "SText", "Time" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Protobuf.PB_TeamApplyHandle_C2S), global::Google.Protobuf.PB_TeamApplyHandle_C2S.Parser, new[]{ "Gid", "Team", "Applicant", "Handle" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  ///队伍类型
  /// </summary>
  public enum TeamType {
    [pbr::OriginalName("TeamType_NONE")] None = 0,
    [pbr::OriginalName("Team_One")] TeamOne = 1,
    [pbr::OriginalName("Team_Three")] TeamThree = 2,
    [pbr::OriginalName("Team_Five")] TeamFive = 3,
  }

  #endregion

  #region Messages
  /// <summary>
  ///请求创建队伍
  /// </summary>
  public sealed partial class PB_GamerCreatTeam_C2S : pb::IMessage<PB_GamerCreatTeam_C2S> {
    private static readonly pb::MessageParser<PB_GamerCreatTeam_C2S> _parser = new pb::MessageParser<PB_GamerCreatTeam_C2S>(() => new PB_GamerCreatTeam_C2S());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PB_GamerCreatTeam_C2S> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.TeamProtoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_GamerCreatTeam_C2S() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_GamerCreatTeam_C2S(PB_GamerCreatTeam_C2S other) : this() {
      gid_ = other.gid_;
      targetid_ = other.targetid_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_GamerCreatTeam_C2S Clone() {
      return new PB_GamerCreatTeam_C2S(this);
    }

    /// <summary>Field number for the "gid" field.</summary>
    public const int GidFieldNumber = 1;
    private ulong gid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Gid {
      get { return gid_; }
      set {
        gid_ = value;
      }
    }

    /// <summary>Field number for the "targetid" field.</summary>
    public const int TargetidFieldNumber = 2;
    private uint targetid_;
    /// <summary>
    ///目标id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Targetid {
      get { return targetid_; }
      set {
        targetid_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private uint type_;
    /// <summary>
    ///创建队伍的类型，几人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PB_GamerCreatTeam_C2S);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PB_GamerCreatTeam_C2S other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Gid != other.Gid) return false;
      if (Targetid != other.Targetid) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Gid != 0UL) hash ^= Gid.GetHashCode();
      if (Targetid != 0) hash ^= Targetid.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Gid != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Gid);
      }
      if (Targetid != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Targetid);
      }
      if (Type != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Gid != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Gid);
      }
      if (Targetid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Targetid);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PB_GamerCreatTeam_C2S other) {
      if (other == null) {
        return;
      }
      if (other.Gid != 0UL) {
        Gid = other.Gid;
      }
      if (other.Targetid != 0) {
        Targetid = other.Targetid;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Gid = input.ReadUInt64();
            break;
          }
          case 16: {
            Targetid = input.ReadUInt32();
            break;
          }
          case 24: {
            Type = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PB_GamerCreatTeam_S2C : pb::IMessage<PB_GamerCreatTeam_S2C> {
    private static readonly pb::MessageParser<PB_GamerCreatTeam_S2C> _parser = new pb::MessageParser<PB_GamerCreatTeam_S2C>(() => new PB_GamerCreatTeam_S2C());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PB_GamerCreatTeam_S2C> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.TeamProtoReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_GamerCreatTeam_S2C() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_GamerCreatTeam_S2C(PB_GamerCreatTeam_S2C other) : this() {
      gid_ = other.gid_;
      teamId_ = other.teamId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_GamerCreatTeam_S2C Clone() {
      return new PB_GamerCreatTeam_S2C(this);
    }

    /// <summary>Field number for the "gid" field.</summary>
    public const int GidFieldNumber = 1;
    private ulong gid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Gid {
      get { return gid_; }
      set {
        gid_ = value;
      }
    }

    /// <summary>Field number for the "team_id" field.</summary>
    public const int TeamIdFieldNumber = 2;
    private uint teamId_;
    /// <summary>
    ///队伍的id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TeamId {
      get { return teamId_; }
      set {
        teamId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PB_GamerCreatTeam_S2C);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PB_GamerCreatTeam_S2C other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Gid != other.Gid) return false;
      if (TeamId != other.TeamId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Gid != 0UL) hash ^= Gid.GetHashCode();
      if (TeamId != 0) hash ^= TeamId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Gid != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Gid);
      }
      if (TeamId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(TeamId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Gid != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Gid);
      }
      if (TeamId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TeamId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PB_GamerCreatTeam_S2C other) {
      if (other == null) {
        return;
      }
      if (other.Gid != 0UL) {
        Gid = other.Gid;
      }
      if (other.TeamId != 0) {
        TeamId = other.TeamId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Gid = input.ReadUInt64();
            break;
          }
          case 16: {
            TeamId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///请求加入队伍
  /// </summary>
  public sealed partial class PB_GamerJoinTeam_C2S : pb::IMessage<PB_GamerJoinTeam_C2S> {
    private static readonly pb::MessageParser<PB_GamerJoinTeam_C2S> _parser = new pb::MessageParser<PB_GamerJoinTeam_C2S>(() => new PB_GamerJoinTeam_C2S());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PB_GamerJoinTeam_C2S> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.TeamProtoReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_GamerJoinTeam_C2S() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_GamerJoinTeam_C2S(PB_GamerJoinTeam_C2S other) : this() {
      gid_ = other.gid_;
      teamId_ = other.teamId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_GamerJoinTeam_C2S Clone() {
      return new PB_GamerJoinTeam_C2S(this);
    }

    /// <summary>Field number for the "gid" field.</summary>
    public const int GidFieldNumber = 1;
    private ulong gid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Gid {
      get { return gid_; }
      set {
        gid_ = value;
      }
    }

    /// <summary>Field number for the "team_id" field.</summary>
    public const int TeamIdFieldNumber = 2;
    private uint teamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TeamId {
      get { return teamId_; }
      set {
        teamId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PB_GamerJoinTeam_C2S);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PB_GamerJoinTeam_C2S other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Gid != other.Gid) return false;
      if (TeamId != other.TeamId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Gid != 0UL) hash ^= Gid.GetHashCode();
      if (TeamId != 0) hash ^= TeamId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Gid != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Gid);
      }
      if (TeamId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(TeamId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Gid != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Gid);
      }
      if (TeamId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TeamId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PB_GamerJoinTeam_C2S other) {
      if (other == null) {
        return;
      }
      if (other.Gid != 0UL) {
        Gid = other.Gid;
      }
      if (other.TeamId != 0) {
        TeamId = other.TeamId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Gid = input.ReadUInt64();
            break;
          }
          case 16: {
            TeamId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///离开队伍
  /// </summary>
  public sealed partial class PB_GamerLeave_C2S : pb::IMessage<PB_GamerLeave_C2S> {
    private static readonly pb::MessageParser<PB_GamerLeave_C2S> _parser = new pb::MessageParser<PB_GamerLeave_C2S>(() => new PB_GamerLeave_C2S());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PB_GamerLeave_C2S> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.TeamProtoReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_GamerLeave_C2S() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_GamerLeave_C2S(PB_GamerLeave_C2S other) : this() {
      gid_ = other.gid_;
      teamId_ = other.teamId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_GamerLeave_C2S Clone() {
      return new PB_GamerLeave_C2S(this);
    }

    /// <summary>Field number for the "gid" field.</summary>
    public const int GidFieldNumber = 1;
    private ulong gid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Gid {
      get { return gid_; }
      set {
        gid_ = value;
      }
    }

    /// <summary>Field number for the "team_id" field.</summary>
    public const int TeamIdFieldNumber = 2;
    private uint teamId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TeamId {
      get { return teamId_; }
      set {
        teamId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PB_GamerLeave_C2S);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PB_GamerLeave_C2S other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Gid != other.Gid) return false;
      if (TeamId != other.TeamId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Gid != 0UL) hash ^= Gid.GetHashCode();
      if (TeamId != 0) hash ^= TeamId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Gid != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Gid);
      }
      if (TeamId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(TeamId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Gid != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Gid);
      }
      if (TeamId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TeamId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PB_GamerLeave_C2S other) {
      if (other == null) {
        return;
      }
      if (other.Gid != 0UL) {
        Gid = other.Gid;
      }
      if (other.TeamId != 0) {
        TeamId = other.TeamId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Gid = input.ReadUInt64();
            break;
          }
          case 16: {
            TeamId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///队伍成员信息
  /// </summary>
  public sealed partial class PB_TeamMemberInfo : pb::IMessage<PB_TeamMemberInfo> {
    private static readonly pb::MessageParser<PB_TeamMemberInfo> _parser = new pb::MessageParser<PB_TeamMemberInfo>(() => new PB_TeamMemberInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PB_TeamMemberInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.TeamProtoReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_TeamMemberInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_TeamMemberInfo(PB_TeamMemberInfo other) : this() {
      gid_ = other.gid_;
      icon_ = other.icon_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_TeamMemberInfo Clone() {
      return new PB_TeamMemberInfo(this);
    }

    /// <summary>Field number for the "gid" field.</summary>
    public const int GidFieldNumber = 1;
    private ulong gid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Gid {
      get { return gid_; }
      set {
        gid_ = value;
      }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 2;
    private uint icon_;
    /// <summary>
    ///头像
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Icon {
      get { return icon_; }
      set {
        icon_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PB_TeamMemberInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PB_TeamMemberInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Gid != other.Gid) return false;
      if (Icon != other.Icon) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Gid != 0UL) hash ^= Gid.GetHashCode();
      if (Icon != 0) hash ^= Icon.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Gid != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Gid);
      }
      if (Icon != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Icon);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Gid != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Gid);
      }
      if (Icon != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Icon);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PB_TeamMemberInfo other) {
      if (other == null) {
        return;
      }
      if (other.Gid != 0UL) {
        Gid = other.Gid;
      }
      if (other.Icon != 0) {
        Icon = other.Icon;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Gid = input.ReadUInt64();
            break;
          }
          case 16: {
            Icon = input.ReadUInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///频道信息
  /// </summary>
  public sealed partial class PB_ChannelChat : pb::IMessage<PB_ChannelChat> {
    private static readonly pb::MessageParser<PB_ChannelChat> _parser = new pb::MessageParser<PB_ChannelChat>(() => new PB_ChannelChat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PB_ChannelChat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.TeamProtoReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_ChannelChat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_ChannelChat(PB_ChannelChat other) : this() {
      gid_ = other.gid_;
      channelId_ = other.channelId_;
      sText_ = other.sText_;
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_ChannelChat Clone() {
      return new PB_ChannelChat(this);
    }

    /// <summary>Field number for the "gid" field.</summary>
    public const int GidFieldNumber = 1;
    private ulong gid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Gid {
      get { return gid_; }
      set {
        gid_ = value;
      }
    }

    /// <summary>Field number for the "channel_id" field.</summary>
    public const int ChannelIdFieldNumber = 2;
    private uint channelId_;
    /// <summary>
    ///频道id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint ChannelId {
      get { return channelId_; }
      set {
        channelId_ = value;
      }
    }

    /// <summary>Field number for the "sText" field.</summary>
    public const int STextFieldNumber = 3;
    private string sText_ = "";
    /// <summary>
    ///文本
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SText {
      get { return sText_; }
      set {
        sText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 4;
    private ulong time_;
    /// <summary>
    ///发送时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PB_ChannelChat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PB_ChannelChat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Gid != other.Gid) return false;
      if (ChannelId != other.ChannelId) return false;
      if (SText != other.SText) return false;
      if (Time != other.Time) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Gid != 0UL) hash ^= Gid.GetHashCode();
      if (ChannelId != 0) hash ^= ChannelId.GetHashCode();
      if (SText.Length != 0) hash ^= SText.GetHashCode();
      if (Time != 0UL) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Gid != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Gid);
      }
      if (ChannelId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(ChannelId);
      }
      if (SText.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SText);
      }
      if (Time != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Gid != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Gid);
      }
      if (ChannelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ChannelId);
      }
      if (SText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SText);
      }
      if (Time != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PB_ChannelChat other) {
      if (other == null) {
        return;
      }
      if (other.Gid != 0UL) {
        Gid = other.Gid;
      }
      if (other.ChannelId != 0) {
        ChannelId = other.ChannelId;
      }
      if (other.SText.Length != 0) {
        SText = other.SText;
      }
      if (other.Time != 0UL) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Gid = input.ReadUInt64();
            break;
          }
          case 16: {
            ChannelId = input.ReadUInt32();
            break;
          }
          case 26: {
            SText = input.ReadString();
            break;
          }
          case 32: {
            Time = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///处理玩家的入队申请
  /// </summary>
  public sealed partial class PB_TeamApplyHandle_C2S : pb::IMessage<PB_TeamApplyHandle_C2S> {
    private static readonly pb::MessageParser<PB_TeamApplyHandle_C2S> _parser = new pb::MessageParser<PB_TeamApplyHandle_C2S>(() => new PB_TeamApplyHandle_C2S());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PB_TeamApplyHandle_C2S> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Protobuf.TeamProtoReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_TeamApplyHandle_C2S() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_TeamApplyHandle_C2S(PB_TeamApplyHandle_C2S other) : this() {
      gid_ = other.gid_;
      team_ = other.team_;
      applicant_ = other.applicant_.Clone();
      handle_ = other.handle_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PB_TeamApplyHandle_C2S Clone() {
      return new PB_TeamApplyHandle_C2S(this);
    }

    /// <summary>Field number for the "gid" field.</summary>
    public const int GidFieldNumber = 1;
    private ulong gid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Gid {
      get { return gid_; }
      set {
        gid_ = value;
      }
    }

    /// <summary>Field number for the "team" field.</summary>
    public const int TeamFieldNumber = 2;
    private uint team_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Team {
      get { return team_; }
      set {
        team_ = value;
      }
    }

    /// <summary>Field number for the "applicant" field.</summary>
    public const int ApplicantFieldNumber = 3;
    private static readonly pb::FieldCodec<ulong> _repeated_applicant_codec
        = pb::FieldCodec.ForUInt64(26);
    private readonly pbc::RepeatedField<ulong> applicant_ = new pbc::RepeatedField<ulong>();
    /// <summary>
    ///申请者ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> Applicant {
      get { return applicant_; }
    }

    /// <summary>Field number for the "handle" field.</summary>
    public const int HandleFieldNumber = 4;
    private static readonly pb::FieldCodec<uint> _repeated_handle_codec
        = pb::FieldCodec.ForUInt32(34);
    private readonly pbc::RepeatedField<uint> handle_ = new pbc::RepeatedField<uint>();
    /// <summary>
    ///1:同意，2拒绝
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Handle {
      get { return handle_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PB_TeamApplyHandle_C2S);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PB_TeamApplyHandle_C2S other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Gid != other.Gid) return false;
      if (Team != other.Team) return false;
      if(!applicant_.Equals(other.applicant_)) return false;
      if(!handle_.Equals(other.handle_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Gid != 0UL) hash ^= Gid.GetHashCode();
      if (Team != 0) hash ^= Team.GetHashCode();
      hash ^= applicant_.GetHashCode();
      hash ^= handle_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Gid != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Gid);
      }
      if (Team != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Team);
      }
      applicant_.WriteTo(output, _repeated_applicant_codec);
      handle_.WriteTo(output, _repeated_handle_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Gid != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Gid);
      }
      if (Team != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Team);
      }
      size += applicant_.CalculateSize(_repeated_applicant_codec);
      size += handle_.CalculateSize(_repeated_handle_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PB_TeamApplyHandle_C2S other) {
      if (other == null) {
        return;
      }
      if (other.Gid != 0UL) {
        Gid = other.Gid;
      }
      if (other.Team != 0) {
        Team = other.Team;
      }
      applicant_.Add(other.applicant_);
      handle_.Add(other.handle_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Gid = input.ReadUInt64();
            break;
          }
          case 16: {
            Team = input.ReadUInt32();
            break;
          }
          case 26:
          case 24: {
            applicant_.AddEntriesFrom(input, _repeated_applicant_codec);
            break;
          }
          case 34:
          case 32: {
            handle_.AddEntriesFrom(input, _repeated_handle_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
